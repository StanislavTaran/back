definitions:
  auth.Credentials:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  httpResponse.ResponseError:
    properties:
      message:
        type: string
      reason:
        type: string
    type: object
  jwtpackage.RT:
    properties:
      refreshToken:
        type: string
    type: object
  jwtpackage.TokenInfo:
    properties:
      refreshToken:
        type: string
      token:
        type: string
    type: object
  user.CreateUserDTO:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
    type: object
  user.FullUserInfoDTO:
    properties:
      createdAt:
        type: string
      dateOfBirth:
        type: string
      education:
        items:
          $ref: '#/definitions/user.educationUserInfo'
        type: array
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      jobExperience:
        items:
          $ref: '#/definitions/user.jobUserInfo'
        type: array
      lastName:
        type: string
      password:
        type: string
      role:
        type: string
      roleId:
        type: integer
      shortInfo:
        type: string
      updatedAt:
        type: string
    type: object
  user.User:
    properties:
      createdAt:
        type: string
      dateOfBirth:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      password:
        type: string
      roleId:
        type: integer
      shortInfo:
        type: string
      updatedAt:
        type: string
    type: object
  user.company:
    properties:
      id:
        type: number
      name:
        type: string
    type: object
  user.eduInstitution:
    properties:
      id:
        type: number
      name:
        type: string
    type: object
  user.educationUserInfo:
    properties:
      eduInstitution:
        $ref: '#/definitions/user.eduInstitution'
      endDate:
        type: string
      faculty:
        type: string
      id:
        type: number
      inProgress:
        type: number
      startDate:
        type: string
    type: object
  user.jobUserInfo:
    properties:
      company:
        $ref: '#/definitions/user.company'
      employmentType:
        type: string
      endDate:
        type: string
      id:
        type: number
      inProgress:
        type: number
      jobTitle:
        type: string
      startDate:
        type: string
    type: object
  user_company.CreateUserJobExperienceDTO:
    properties:
      companyId:
        type: integer
      companyName:
        type: string
      employmentTypeId:
        type: integer
      endDate:
        type: string
      inProgress:
        type: integer
      jobTitle:
        type: string
      startDate:
        type: string
      userId:
        type: string
    type: object
info:
  contact: {}
  title: User API documentation
  version: 1.0.0
paths:
  /auth/logout:
    post:
      consumes:
      - application/json
      parameters:
      - description: Log Out
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/jwtpackage.RT'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpResponse.ResponseError'
      summary: Log Out
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: Refresh Token
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/jwtpackage.RT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/jwtpackage.TokenInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpResponse.ResponseError'
        "401":
          description: ""
      summary: Refresh Token
      tags:
      - Auth
  /auth/signIn:
    post:
      consumes:
      - application/json
      parameters:
      - description: Sign In
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/auth.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/jwtpackage.TokenInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpResponse.ResponseError'
      summary: Sign In
      tags:
      - Auth
  /userCompany:
    post:
      consumes:
      - application/json
      description: Create User Job Experience
      parameters:
      - description: User job data
        in: body
        name: userData
        required: true
        schema:
          $ref: '#/definitions/user_company.CreateUserJobExperienceDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                id:
                  type: number
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpResponse.ResponseError'
        "401":
          description: ""
      summary: Create User Job Experience
      tags:
      - User Company
  /users:
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: User data
        in: body
        name: userData
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                id:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpResponse.ResponseError'
      summary: Create User
      tags:
      - User
  /users/:id:
    get:
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpResponse.ResponseError'
        "401":
          description: ""
      summary: Get user by id
      tags:
      - User
  /users/:id/profile:
    get:
      description: Get user info with info about job experience and education
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.FullUserInfoDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpResponse.ResponseError'
        "401":
          description: ""
      summary: Get user info by id
      tags:
      - User
swagger: "2.0"
